{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o do projeto:","text":"<p>               Bases: <code>BaseModel</code></p> <p>Modelo de dados para as vendas.</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>EmailStr</code> <p>email do comprador</p> required <code>data</code> <code>datetime</code> <p>data da compra</p> required <code>valor</code> <code>PositiveFloat</code> <p>valor da compra</p> required <code>quantidade</code> <code>PositiveInt</code> <p>quantidade de produtos</p> required <code>produto</code> <code>Produto</code> <p>categoria do produto</p> required Source code in <code>src/contract.py</code> <pre><code>class Vendas(BaseModel):\n    \"\"\"\n    Modelo de dados para as vendas.\n\n    Args:\n        email (EmailStr): email do comprador\n        data (datetime): data da compra\n        valor (PositiveFloat): valor da compra\n        quantidade (PositiveInt): quantidade de produtos\n        produto (Produto): categoria do produto\n    \"\"\"\n\n    email: EmailStr\n    data: datetime\n    valor: PositiveFloat\n    quantidade: PositiveInt\n    produto: Produto\n</code></pre> <p>Salva os dados validados no PostgreSQL.</p> Source code in <code>src/database.py</code> <pre><code>def salvar_no_postgres(dados: Vendas):\n    \"\"\"\n    Salva os dados validados no PostgreSQL.\n    \"\"\"\n    try:\n        # Conecta ao banco de dados\n        conn = psycopg2.connect(\n            host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASS\n        )\n        cursor = conn.cursor()\n\n        # Insere os dados na tabela de vendas\n        insert_query = sql.SQL(\n            \"INSERT INTO vendas (email, data, valor, quantidade, produto) VALUES (%s, %s, %s, %s, %s)\"\n        )\n        cursor.execute(\n            insert_query,\n            (\n                dados.email,\n                dados.data,\n                dados.valor,\n                dados.quantidade,\n                dados.produto.value,\n            ),\n        )\n        conn.commit()\n        cursor.close()\n        conn.close()\n        print(\"Dados salvos com sucesso no banco de dados!\")\n    except Exception as e:\n        raise Exception(f\"Erro ao salvar no banco de dados: {e}\")\n</code></pre> <p>Cria a tabela de vendas no PostgreSQL.</p> Source code in <code>src/database.py</code> <pre><code>def criar_tabela_vendas():\n    \"\"\"\n    Cria a tabela de vendas no PostgreSQL.\n    \"\"\"\n    try:\n        # Conecta ao banco de dados\n        conn = psycopg2.connect(\n            host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASS\n        )\n        cursor = conn.cursor()\n\n        # Cria a tabela de vendas\n        create_table_query = sql.SQL(\n            \"\"\"\n            CREATE TABLE IF NOT EXISTS vendas (\n                id SERIAL PRIMARY KEY,\n                email VARCHAR(255) NOT NULL,\n                data TIMESTAMP WITHOUT TIME ZONE NOT NULL,\n                valor NUMERIC(10, 2) NOT NULL,\n                quantidade INTEGER NOT NULL,\n                produto VARCHAR(255) NOT NULL\n            )\n            \"\"\"\n        )\n        cursor.execute(create_table_query)\n        conn.commit()\n        cursor.close()\n        conn.close()\n    except Exception as e:\n        raise Exception(f\"Erro ao criar a tabela de vendas: {e}\")\n</code></pre> <p>Salva uma lista de objetos Vendas no PostgreSQL em um \u00fanico lote.</p> Source code in <code>src/database.py</code> <pre><code>def salvar_no_postgres_em_lote(vendas: list[Vendas]):\n    \"\"\"\n    Salva uma lista de objetos Vendas no PostgreSQL em um \u00fanico lote.\n    \"\"\"\n    try:\n        # Conecta ao banco de dados\n        conn = psycopg2.connect(\n            host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASS\n        )\n        cursor = conn.cursor()\n\n        # Prepara os valores para inser\u00e7\u00e3o em lote\n        values = [\n            (\n                venda.email,\n                venda.data,\n                venda.valor,\n                venda.quantidade,\n                venda.produto.value,\n            )\n            for venda in vendas\n        ]\n\n        # Insere os dados na tabela de vendas em lote\n        insert_query = sql.SQL(\n            \"INSERT INTO vendas (email, data, valor, quantidade, produto) VALUES %s\"\n        )\n        execute_values(cursor, insert_query, values)\n        conn.commit()\n        cursor.close()\n        conn.close()\n\n        return True\n    except Exception as e:\n        raise Exception(f\"Erro ao salvar no banco de dados: {e}\")\n        return False\n</code></pre> <p>Deleta todos os dados da tabela de vendas no PostgreSQL.</p> Source code in <code>src/database.py</code> <pre><code>def delete_all_sales_data():\n    \"\"\"\n    Deleta todos os dados da tabela de vendas no PostgreSQL.\n    \"\"\"\n    try:\n        # Conecta ao banco de dados\n        conn = psycopg2.connect(\n            host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASS\n        )\n        cursor = conn.cursor()\n\n        # Deleta todos os dados da tabela de vendas\n        delete_query = sql.SQL(\"DELETE FROM vendas\")\n        cursor.execute(delete_query)\n        conn.commit()\n        cursor.close()\n        conn.close()\n\n        return True\n    except Exception as e:\n        return False, f\"Erro ao deletar os dados do banco de dados: {e}\"\n</code></pre>"}]}